# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        #自己的
#         a =b = []
#         while l1 is not None:
#             a.append(l1.val)
#             l1 = l1.next
#         while l2 is not None:
#             a.append(l2.val)
#             l2 = l2.next
#         b = sorted(a,reverse = 1)
        
#         In = None
#         for i in b:
#             lag = In
#             In = ListNode(i)
#             In.next = lag
            
#         return In

        # 别人的
        if l1 and l2:
            l1, l2 = sorted((l1, l2), key=lambda x: x.val)
            l1.next = self.mergeTwoLists(l1.next, l2)
        return l1 or l2
